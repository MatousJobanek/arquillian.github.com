---
date: 2017-10-23
author: matousjobanek
---

h3. Highlights of this release

p. With almost one month of a break, we bring you the third release of our great Smart Testing tool!
Apart from several small improvements, component upgrades, and bug fixes, this release contains one killer feature and one smaller feature that will make your life easier.

h3. Configuration file

p. In both previous releases, there was only one way of configuring the Smart Testing tool and it was using system properties. Since this is definitely not very comfortable, we have introduced a new way - using YAML configuration file.
The name of the file should be either @smart-testing.yml@ or @smart-testing.yaml@ and should be located in the root of the directory the build is executed from. An example what it can look like is here:

bc(prettify).. strategies: new, changed, affected
mode: ordering
applyTo: surefire
debug: true
report:
    enable: true
scm:
    range:
      head: HEAD
      tail: HEAD~2

p. We are keeping the same property names as it is done for the system properties, just without the prefix @smart.testing@. This means that when you want to activate a set of strategies on a command line, then you should use the system property @smart.testing.strategies@. As you can see in the example, in the configuration file it is just @strategies@. Analogically for other parameters.

p(info). %The system properties are still supported. When both system properties and the configuration file are used, the values defined by system properties have the precedence.%

h3. Autocorrection of mistyped strategy names

p. It might happen that you misspell a strategy when executing the build. For example:

bc(prettify).. $ mvn clean verify -Dsmart.testing=new,change,afected

p. This will lead to a failing build with some hints in the error message. To avoid this situation, you can activate the autocorrection feature by setting @smart.testing.autocorrect=true@ on a command line or just @autocorrect: true@ in the config file. If it is set, the mistyped name is automatically corrected and the affected strategy is used.

h3. What's next

We are working hard on the next release which will bring JUnit 5 support, a possibility of configuring custom strategies and many more cool features! Stay tuned!
